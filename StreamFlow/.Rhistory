Region2[Region2>480]
Region2[Region2>400]
data = Region2
gpd.fit(data, threshold=400)
data[data>500]
gpd.fit(data, threshold=500,ydat=matrix(1:length(data)),sigl = 1)
gpd.fit(data, threshold=500)
fit2 <- gpd.fit(data, threshold=500)
fit3 <- gpd.fit(data, threshold=500,ydat=matrix(1:length(data)),sigl = 1)
fit2$nllh-fit3$nllh
tcplot(data,c(1000,1200))
data = Region3
tcplot(data,c(1000,1200))
data[data>1100]
tcplot(data,c(800,1200))
data[data>800]
tcplot(data,c(600,1200))
data[data>600]
tcplot(data,c(400,1200))
data[data>1040]
data[data>800]
data[data>600]
data[data>800]
fit2 <- gpd.fit(data, threshold=800)
fit3 <- gpd.fit(data, threshold=800,ydat=matrix(1:length(data),),sigl = 1)
qchisq(0.95,1)
2*(fit2$nllh-fit3$nllh)
data = Region4
tcplot(data,c(200,600))
tcplot(data,c(200,450))
data[data>360]
data[data>300]
gpd.fit(data, threshold=300)
gpd.fit(data, threshold=300,ydat=matrix(1:length(data),),sigl = 1)
fit2 <- gpd.fit(data, threshold=300)
fit3 <- gpd.fit(data, threshold=300,ydat=matrix(1:length(data),),sigl = 1)
2*(fit2$nllh-fit3$nllh)
data = Region5
tcplot(data,c(500,1000))
data[data>1000]
data[data>800]
data[data>600]
fit2 <- gpd.fit(data, threshold=600)
fit3 <- gpd.fit(data, threshold=600,ydat=matrix(1:length(data),),sigl = 1)
2*(fit2$nllh-fit3$nllh)
fit3 <- gpd.fit(data, threshold=600,ydat=matrix(1:length(data),),sigl = 1)
data[data>600]
tcplot(data,c(500,1000))
library(data.table)
library(tidyverse)
library(ismev)
library(evd)
tcplot(data,c(500,1000))
data[data>700]
#### read all function ####
setwd("F:/Streamflow/code/")
source("CI.R")
source("cut_breakpoint.R")
source("fit_abrupt.R")
source("fit_linear.R")
source("fit_quad.R")
source("Moving_window.R")
source("ll.R")
source("graph_data.R")
source("plot_para.R")
library(data.table)
library(tidyverse)
library(ismev)
library(gridExtra)
#### read data ####
setwd("F:\\StreamFlow")
load("Stream.Rdata")
Stream <- Stream[Q >= 0]
Stream_plot <- Stream[, c("Site", "Q", "DecYear", "Month", "Region")]
index <- Region_name[-(19:21), 2]
#### define breakpoint ####
point <- data.frame(
mu = c(16, 20, 20, 30, 20, 20, 16, 20, 16, 20, 16, 20, 20, 16, 20, 25, 27, 20),
sig = c(20, 30, 25, 20, 20, 27, 16, 20, 20, 20, 20, 20, 16, 16, 25, 26, 25, 20),
sh = c(15, 30, 22, 20, 14, 18, 25, 25, 20, 16, 20, 20, 20, 20, 25, 25, 25, 25)
)
#### fit models and plot ####
gra <- list()
for (i in 1:18) {
assign("Region", Stream_plot[Region == index[i]][, max(Q), by = DecYear])
# MOV
MOV <- Moving_window(
x = Region, win = 10, url = "F:/StreamFlow/Plot/Moving_Windows",
save = FALSE, name = quote(Region1)
)
x <- Region$V1
fit1 <- fit_linear(x, point[i, 1], point[i, 2], point[i, 3])
fit2 <- fit_quad(x)
fit3 <- fit_abrupt(x, point[i, 1], point[i, 2], point[i, 3])
fit_list <- list(fit1[[1]], fit1[[2]], fit1[[3]], fit1[[4]], fit2, fit3)
est <- graph_data(
fit_list,
c("best_fit", "s_fit", "single_fit", "double_fit", "quad_fit", "abrupt_fit")
)
gra[[i]] <- plot_para(
est[[1]], est[[2]], est[[3]],
Region, i
)
# ignore = c("double_fit","single_fit"))
}
#### read all function ####
setwd("F:/Streamflow/code/")
source("CI.R")
source("cut_breakpoint.R")
source("fit_abrupt.R")
source("fit_linear.R")
source("fit_quad.R")
source("Moving_window.R")
source("ll.R")
source("graph_data.R")
source("plot_para.R")
library(data.table)
library(tidyverse)
library(ismev)
library(gridExtra)
#### read data ####
setwd("F:\\StreamFlow")
load("Stream.Rdata")
Stream <- Stream[Q >= 0]
Stream_plot <- Stream[, c("Site", "Q", "DecYear", "Month", "Region")]
index <- Region_name[-(19:21), 2]
#### define breakpoint ####
point <- data.frame(
mu = c(16, 20, 20, 30, 20, 20, 16, 20, 16, 20, 16, 20, 20, 16, 20, 25, 27, 20),
sig = c(20, 30, 25, 20, 20, 27, 16, 20, 20, 20, 20, 20, 16, 16, 25, 26, 25, 20),
sh = c(15, 30, 22, 20, 14, 18, 25, 25, 20, 16, 20, 20, 20, 20, 25, 25, 25, 25)
)
#### fit models and plot ####
gra <- list()
for (i in 1:18) {
assign("Region", Stream_plot[Region == index[i]][, max(Q), by = DecYear])
# MOV
MOV <- Moving_window(
x = Region, win = 10, url = "F:/StreamFlow/Plot/Moving_Windows",
save = FALSE, name = quote(Region1)
)
x <- Region$V1
fit1 <- fit_linear(x, point[i, 1], point[i, 2], point[i, 3])
fit2 <- fit_quad(x)
fit3 <- fit_abrupt(x, point[i, 1], point[i, 2], point[i, 3])
fit_list <- list(fit1[[1]], fit1[[2]], fit1[[3]], fit1[[4]], fit2, fit3)
assign(paste0("est",i),graph_data(
fit_list,
c("best_fit", "s_fit", "single_fit", "double_fit", "quad_fit", "abrupt_fit")
))
# gra[[i]] <- plot_para(
#  est[[1]], est[[2]], est[[3]],
#  Region, i
#)
# ignore = c("double_fit","single_fit"))
}
gra <- list()
View(plot_para)
View(plot_para)
View(plot_para)
setwd("F:/Streamflow/code/")
source("CI.R")
source("cut_breakpoint.R")
source("fit_abrupt.R")
source("fit_linear.R")
source("fit_quad.R")
source("Moving_window.R")
source("ll.R")
source("graph_data.R")
source("plot_para.R")
library(data.table)
library(tidyverse)
library(ismev)
library(gridExtra)
#### read data ####
setwd("F:\\StreamFlow")
load("Stream.Rdata")
Stream <- Stream[Q >= 0]
Stream_plot <- Stream[, c("Site", "Q", "DecYear", "Month", "Region")]
index <- Region_name[-(19:21), 2]
#### define breakpoint ####
point <- data.frame(
mu = c(16, 20, 20, 30, 20, 20, 16, 20, 16, 20, 16, 20, 20, 16, 20, 25, 27, 20),
sig = c(20, 30, 25, 20, 20, 27, 16, 20, 20, 20, 20, 20, 16, 16, 25, 26, 25, 20),
sh = c(15, 30, 22, 20, 14, 18, 25, 25, 20, 16, 20, 20, 20, 20, 25, 25, 25, 25)
)
#### fit models and plot ####
gra <- list()
est <- list()
for (i in 1:18) {
assign("Region", Stream_plot[Region == index[i]][, max(Q), by = DecYear])
# MOV
MOV <- Moving_window(
x = Region, win = 10, url = "F:/StreamFlow/Plot/Moving_Windows",
save = FALSE, name = quote(Region1)
)
x <- Region$V1
fit1 <- fit_linear(x, point[i, 1], point[i, 2], point[i, 3])
fit2 <- fit_quad(x)
fit3 <- fit_abrupt(x, point[i, 1], point[i, 2], point[i, 3])
fit_list <- list(fit1[[1]], fit1[[2]], fit1[[3]], fit1[[4]], fit2, fit3)
est[[i]] <- graph_data(
fit_list,
c("best_fit", "s_fit", "single_fit", "double_fit", "quad_fit", "abrupt_fit")
)
# gra[[i]] <- plot_para(
#  est[[1]], est[[2]], est[[3]],
#  Region, i
#)
# ignore = c("double_fit","single_fit"))
}
setwd("F:/StreamFlow")
save(est,file="est.Rdata")
gra <- list()
est <- list()
MOV <- list()
Region <- list()
for (i in 1:18) {
assign("Region", Stream_plot[Region == index[i]][, max(Q), by = DecYear])
# MOV
MOV[[i]] <- Moving_window(
x = Region, win = 10, url = "F:/StreamFlow/Plot/Moving_Windows",
save = FALSE, name = quote(Region1)
)
Region[[i]] <- get("Region",i)
x <- Region$V1
fit1 <- fit_linear(x, point[i, 1], point[i, 2], point[i, 3])
fit2 <- fit_quad(x)
fit3 <- fit_abrupt(x, point[i, 1], point[i, 2], point[i, 3])
fit_list <- list(fit1[[1]], fit1[[2]], fit1[[3]], fit1[[4]], fit2, fit3)
est[[i]] <- graph_data(
fit_list,
c("best_fit", "s_fit", "single_fit", "double_fit", "quad_fit", "abrupt_fit")
)
# gra[[i]] <- plot_para(
#  est[[1]], est[[2]], est[[3]],
#  Region, i
#)
# ignore = c("double_fit","single_fit"))
}
gra <- list()
est <- list()
MOV <- list()
Region <- list()
for (i in 1:18) {
assign("Region", Stream_plot[Region == index[i]][, max(Q), by = DecYear])
# MOV
MOV[[i]] <- Moving_window(
x = Region, win = 10, url = "F:/StreamFlow/Plot/Moving_Windows",
save = FALSE, name = quote(Region1)
)
Region[[i]] <- get(paste0("Region",i))
x <- Region$V1
fit1 <- fit_linear(x, point[i, 1], point[i, 2], point[i, 3])
fit2 <- fit_quad(x)
fit3 <- fit_abrupt(x, point[i, 1], point[i, 2], point[i, 3])
fit_list <- list(fit1[[1]], fit1[[2]], fit1[[3]], fit1[[4]], fit2, fit3)
est[[i]] <- graph_data(
fit_list,
c("best_fit", "s_fit", "single_fit", "double_fit", "quad_fit", "abrupt_fit")
)
# gra[[i]] <- plot_para(
#  est[[1]], est[[2]], est[[3]],
#  Region, i
#)
# ignore = c("double_fit","single_fit"))
}
gra <- list()
est <- list()
MOV <- list()
Region <- list()
for (i in 1:18) {
assign("Region", Stream_plot[Region == index[i]][, max(Q), by = DecYear])
Region[[i]] <- Region
# MOV
MOV[[i]] <- Moving_window(
x = Region, win = 10, url = "F:/StreamFlow/Plot/Moving_Windows",
save = FALSE, name = quote(Region1)
)
x <- Region$V1
fit1 <- fit_linear(x, point[i, 1], point[i, 2], point[i, 3])
fit2 <- fit_quad(x)
fit3 <- fit_abrupt(x, point[i, 1], point[i, 2], point[i, 3])
fit_list <- list(fit1[[1]], fit1[[2]], fit1[[3]], fit1[[4]], fit2, fit3)
est[[i]] <- graph_data(
fit_list,
c("best_fit", "s_fit", "single_fit", "double_fit", "quad_fit", "abrupt_fit")
)
# gra[[i]] <- plot_para(
#  est[[1]], est[[2]], est[[3]],
#  Region, i
#)
# ignore = c("double_fit","single_fit"))
}
gra <- list()
est <- list()
MOV <- list()
Region_list <- list()
for (i in 1:18) {
assign("Region", Stream_plot[Region == index[i]][, max(Q), by = DecYear])
Region_list[[i]] <- Region
# MOV
MOV[[i]] <- Moving_window(
x = Region, win = 10, url = "F:/StreamFlow/Plot/Moving_Windows",
save = FALSE, name = quote(Region1)
)
x <- Region$V1
fit1 <- fit_linear(x, point[i, 1], point[i, 2], point[i, 3])
fit2 <- fit_quad(x)
fit3 <- fit_abrupt(x, point[i, 1], point[i, 2], point[i, 3])
fit_list <- list(fit1[[1]], fit1[[2]], fit1[[3]], fit1[[4]], fit2, fit3)
est[[i]] <- graph_data(
fit_list,
c("best_fit", "s_fit", "single_fit", "double_fit", "quad_fit", "abrupt_fit")
)
# gra[[i]] <- plot_para(
#  est[[1]], est[[2]], est[[3]],
#  Region, i
#)
# ignore = c("double_fit","single_fit"))
}
#### read data ####
setwd("F:\\StreamFlow")
save(Region_list,MOV,est,file="est.Rdata")
save(MOV,"MOV.Rdata")
save(MOV,file="MOV.Rdata")
?save
setwd("F:/Streamflow/code/")
source("CI.R")
source("cut_breakpoint.R")
source("fit_abrupt.R")
source("fit_linear.R")
source("fit_quad.R")
source("Moving_window.R")
source("ll.R")
source("graph_data.R")
source("plot_para.R")
library(data.table)
library(tidyverse)
library(ismev)
library(gridExtra)
setwd("F:\\StreamFlow")
load("Stream.Rdata")
Stream <- Stream[Q >= 0]
Stream_plot <- Stream[, c("Site", "Q", "DecYear", "Month", "Region")]
index <- Region_name[-(19:21), 2]
point <- data.frame(
mu = c(16, 20, 20, 30, 20, 20, 16, 20, 16, 20, 16, 20, 20, 16, 20, 25, 27, 20),
sig = c(20, 30, 25, 20, 20, 27, 16, 20, 20, 20, 20, 20, 16, 16, 25, 26, 25, 20),
sh = c(15, 30, 22, 20, 14, 18, 25, 25, 20, 16, 20, 20, 20, 20, 25, 25, 25, 25)
)
#### fit models and plot ####
gra <- list()
for (i in 1:18) {
assign("Region", Stream_plot[Region == index[i]][, max(Q), by = DecYear])
# MOV
MOV <- Moving_window(
x = Region, win = 10, url = "F:/StreamFlow/Plot/Moving_Windows",
save = FALSE, name = quote(Region1)
)
x <- Region$V1
fit1 <- fit_linear(x, point[i, 1], point[i, 2], point[i, 3])
fit2 <- fit_quad(x)
fit3 <- fit_abrupt(x, point[i, 1], point[i, 2], point[i, 3])
fit_list <- list(fit1[[1]], fit1[[2]], fit1[[3]], fit1[[4]], fit2, fit3)
est <- graph_data(
fit_list,
c("best_fit", "s_fit", "single_fit", "double_fit", "quad_fit", "abrupt_fit")
)
gra[[i]] <- plot_para(
est[[1]], est[[2]], est[[3]],
Region, i
)
# ignore = c("double_fit","single_fit"))
}
plot_final <- list()
for (i in 1:6) {
p <- gra[[i]]
plot_final[[3 * (i - 1) + 1]] <- p[[1]]
plot_final[[3 * (i - 1) + 2]] <- p[[2]]
plot_final[[3 * (i - 1) + 3]] <- p[[3]]
}
plot_final[["ncol"]] <- 3
plot_final[["nrow"]] <- 6
do.call(grid.arrange, plot_final)
View(plot_para)
View(plot_para)
plot_final <- list()
for (i in 1:6) {
p <- gra[[i]]
plot_final[[3 * (i - 1) + 1]] <- p[[1]]
plot_final[[3 * (i - 1) + 2]] <- p[[2]]
plot_final[[3 * (i - 1) + 3]] <- p[[3]]
}
plot_final[["ncol"]] <- 3
plot_final[["nrow"]] <- 6
do.call(grid.arrange, plot_final)
View(Moving_window)
View(MOV)
View(plot_para)
View(MOV)
plot_para <- function(est_mu, est_sig, est_sh, Region, n = 1, ignore = NULL) {
if (is_empty(ignore)) {
ignore <- 0
}
p1 <- est_mu %>%
filter(!Group %in% ignore) %>%
ggplot(aes(x = t, y = est)) +
geom_line(aes(color = Group, size = I(1))) +
geom_line(aes(x = t, y = U, color = Group), linetype = 2, size = I(1)) +
geom_line(aes(x = t, y = L, color = Group), linetype = 2, size = I(1)) +
geom_point(data = MOV, aes(x = t, y = location, color = "window", size = I(2))) +
geom_point(data = Region, aes(x = DecYear - 1980, y = V1, size = I(2))) +
xlab(paste0("Region", n,"  ", "t")) +
ylab(expression(mu(t)))
p2 <- est_sig %>%
filter(!Group %in% ignore) %>%
ggplot(aes(x = t, y = est)) +
geom_line(aes(color = Group, size = I(1))) +
geom_line(aes(x = t, y = U, color = Group), linetype = 2, size = I(1)) +
geom_line(aes(x = t, y = L, color = Group), linetype = 2, size = I(1)) +
geom_point(data = MOV, aes(x = t, y = scale, color = "window", size = I(2))) +
xlab(paste0("Region", n,"  ", "t")) +
ylab(expression(sigma(t)))
p3 <- est_sh %>%
filter(!Group %in% ignore) %>%
ggplot(aes(x = t, y = est)) +
geom_line(aes(color = Group, size = I(1))) +
geom_line(aes(x = t, y = U, color = Group), linetype = 2, size = I(1)) +
geom_line(aes(x = t, y = L, color = Group), linetype = 2, size = I(1)) +
geom_point(data = MOV, aes(x = t, y = shape, color = "window", size = I(2))) +
xlab(paste0("Region", n,"  ", "t")) +
ylab(expression(xi(t)))
p <- list(p1, p2, p3)
#  p <- grid.arrange(p1,p2,p3,nrow=3)
#  ggsave(paste0("Region",n,".png"),p,path="F:/Streamflow/Plot/Fit",width=6,height=6)
return(p)
}
gra <- list()
for (i in 1:18) {
assign("Region", Stream_plot[Region == index[i]][, max(Q), by = DecYear])
# MOV
MOV <- Moving_window(
x = Region, win = 10, url = "F:/StreamFlow/Plot/Moving_Windows",
save = FALSE, name = quote(Region1)
)
x <- Region$V1
fit1 <- fit_linear(x, point[i, 1], point[i, 2], point[i, 3])
fit2 <- fit_quad(x)
fit3 <- fit_abrupt(x, point[i, 1], point[i, 2], point[i, 3])
fit_list <- list(fit1[[1]], fit1[[2]], fit1[[3]], fit1[[4]], fit2, fit3)
est <- graph_data(
fit_list,
c("best_fit", "s_fit", "single_fit", "double_fit", "quad_fit", "abrupt_fit")
)
gra[[i]] <- plot_para(
est[[1]], est[[2]], est[[3]],
Region, i
)
# ignore = c("double_fit","single_fit"))
}
#### arrange plot ####
plot_final <- list()
for (i in 1:6) {
p <- gra[[i]]
plot_final[[3 * (i - 1) + 1]] <- p[[1]]
plot_final[[3 * (i - 1) + 2]] <- p[[2]]
plot_final[[3 * (i - 1) + 3]] <- p[[3]]
}
plot_final[["ncol"]] <- 3
plot_final[["nrow"]] <- 6
do.call(grid.arrange, plot_final)
do.call(grid.arrange, plot_final)
for (i in 7:12) {
p <- gra[[i]]
plot_final[[3 * (i - 7) + 1]] <- p[[1]]
plot_final[[3 * (i - 7) + 2]] <- p[[2]]
plot_final[[3 * (i - 7) + 3]] <- p[[3]]
}
plot_final[["ncol"]] <- 3
plot_final[["nrow"]] <- 6
plot_final <- list()
for (i in 7:12) {
p <- gra[[i]]
plot_final[[3 * (i - 7) + 1]] <- p[[1]]
plot_final[[3 * (i - 7) + 2]] <- p[[2]]
plot_final[[3 * (i - 7) + 3]] <- p[[3]]
}
plot_final[["ncol"]] <- 3
plot_final[["nrow"]] <- 6
do.call(grid.arrange, plot_final)
plot_final <- list()
for (i in 13:18) {
p <- gra[[i]]
plot_final[[3 * (i - 13) + 1]] <- p[[1]]
plot_final[[3 * (i - 13) + 2]] <- p[[2]]
plot_final[[3 * (i - 13) + 3]] <- p[[3]]
}
plot_final[["ncol"]] <- 3
plot_final[["nrow"]] <- 6
do.call(grid.arrange, plot_final)
plot_final <- list()
for (i in 13:18) {
p <- gra[[i]]
plot_final[[3 * (i - 13) + 1]] <- p[[1]]
plot_final[[3 * (i - 13) + 2]] <- p[[2]]
plot_final[[3 * (i - 13) + 3]] <- p[[3]]
}
plot_final[["ncol"]] <- 3
plot_final[["nrow"]] <- 6
do.call(grid.arrange, plot_final)
View(fit_abrupt)
