library(data.table)
library(ismev)
library(evd)
library(tidyverse)

source("F:/Extre/Codes/Functions.R")
load("F:/StreamFlow/joint_fitting/joint.Rdata")

# June July Aug

data <- data %>% filter(Month %in% 6:8)
data$station <- rep(new$site_no,each = 3680)
data <- data[Q >= 0]

data_plot <- data[, c("station", "Q", "DecYear", "Month")]

data_plot[, boxplot(Q ~ DecYear)]

# 1992

data_plot$Month <- as.factor(data_plot$Month)

data_plot %>% group_by(DecYear, Month) %>%
  summarise(meanQ=mean(Q)) %>% 
  ggplot(aes(x=DecYear,y=meanQ,group=Month))+
  geom_line()

data_plot %>% group_by(DecYear, station) %>%
  summarise(meanQ=mean(Q)) %>% 
  ggplot(aes(x=DecYear,y=meanQ,color=station))+
  geom_line()

data %>% 
  group_by(station, DecYear) %>% 
  summarise(maxQ=max(Q)) %>%
  ggplot(aes(x=DecYear,y=maxQ,color=station))+
  geom_smooth(se=FALSE)

maxi <- data %>% 
  group_by(station, DecYear) %>% 
  summarise(maxQ=max(Q))

maxi %>%
  filter(station == "05211000") 

StsChos <- c(1:27)
NoSt <- length(StsChos)

# test the trend
ResGev <- list()
GevPars <- matrix(0, NoSt, 3)
FreeGevNLLTemp <- numeric()
for (i in 1:27){
  stat <- unique(maxi$station)[i]
  x <- maxi %>%
    filter(station == stat)
  fit1 <- gev.fit(as.matrix(x[,3]), show = FALSE)
  fit2 <- gev.fit(as.matrix(x[,3]), ydat=as.matrix(x[,2]-as.numeric(x[1,2])),mul=1, show = FALSE)
  
  if(2*(fit2$nllh - fit1$nllh) < qchisq(0.95, 1)){ResGev[[i]]=fit1;print("no")}else{ResGev[[i]]=fit2;print("yes")}
  GevPars[i,] <- ResGev[[i]]$mle
  FreeGevNLLTemp[i] <- ResGev[[i]]$nll
}

## extraction of events
data <- data %>% select(Date, Q)
data$station <- rep(new$site_no,each = 3680)
data <- data %>% spread(station, Q)

StsChos <- c(1:27)
NoSt <- length(StsChos)

Years <- unique(as.numeric(substr(data$Date,1,4)))
StNames <- as.character(StsChos)
YearsWithEvent <- numeric()
AllEvMat <- matrix(0,length(StNames),1)
AllRes <- list()
for (i in 1:length(Years)){
  # events in the i^th year at each station
  Res <- ObtainMultVarEvents(TSs=data,U=0.1,Lag=4,Year=Years[i],StNames=StNames,Plotting=0,mfrow=c(NoSt,1))  ## For Censored Likelihood
  Events <- Res$AllEvMat
  Locations <- Res$Location
  if (length(Events)>0) {
    YearsWithEvent <- c(YearsWithEvent,rep(Years[i],dim(Events)[2]))
    AllEvMat <- cbind(AllEvMat,Events)
  }
  AllRes[[i]] <- Res 
}

DataEvents <- t(AllEvMat[,-1])
rownames(DataEvents) <- YearsWithEvent 

#### EC for HR ####

Theta.cen <- matrix(1,ncol = NoSt,nrow = NoSt)

for(i in 1:(NoSt-1))
  for(j in (i+1):NoSt) {
    Data.biv <- DataEvents[,c(i,j)]
    Theta.cen[i,j] <- CensoredEstimationHR(Data.biv, thresholds = .90)
    Theta.cen[j,i] <- Theta.cen[i,j]
    print(paste("i=",i,"j=",j))
  }

#### EC for modagram ####

## location
locations <- new %>% select(dec_long_va, dec_lat_va)
colnames(locations) <- c("lon", "lat")

##Simulate a max-stable process - with unit Frechet margins
library(SpatialExtremes)
library(geosphere)

##Compute the madogram
theta <- madogram(DataEvents, as.matrix(locations))
maxstable <- fitmaxstab(DataEvents, as.matrix(locations), "whitmat", nugget = 0)

## 3- Plot the extremal coefficient
extcoeff(maxstable)

p <- cbind(locations$lon, locations$lat)
p <- distm(p, p, fun = distHaversine)

FlowCon <- read.csv("F:/StreamFlow/joint_fitting/FlowCon.csv",header = FALSE)

con <- FlowCon[lower.tri(FlowCon)]
FlowCon <- t(FlowCon)
FlowCon[lower.tri(FlowCon)] <- con


m <- matrix(NA, ncol = 27, nrow = 27)
m[lower.tri(m)] <- 1:351

theta <- as.data.frame(theta)
theta$group <- con

theta <- theta %>% mutate(
  group = ifelse(group==1, "connected", "unconnected")
)

theta$dist <- p[lower.tri(p)]


ggplot(data = theta) + 
  geom_point(aes(x = dist, y=ext.coeff, color = as.factor(group)))

+
  coord_fixed(ratio = 10) +
  ylim(c(1,2))

m2 <- matrix(NA, 27, 27)
m2[lower.tri(m2)] <- theta[,3]

m2 <- t(m2)
m2[lower.tri(m2)] <- theta[,3]
diag(m2) <- 1

plotECF(ECemp = m2,
        ECtheo = Theta.cen,
        Dist = p,
        is.con = FlowCon,
        StsIdx  = StsChos,
        which.plots = c(FALSE,FALSE,TRUE),
        which.labels = c(FALSE, FALSE,FALSE),
        PDF = FALSE,
        filename = paste("Plots","ECF_Emp_HR.pdf",sep="/"))














