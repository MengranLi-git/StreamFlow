function (data, nq = 100, qlim = NULL, which = 1:2, conf = 0.95, 
          trunc = TRUE, spcases = FALSE, lty = 1, cilty = 2, col = 1, 
          cicol = 1, xlim = c(0, 1), ylim1 = c(-1, 1), ylim2 = c(-1, 
                                                                 1), main1 = "Chi Plot", main2 = "Chi Bar Plot", 
          xlab = "Quantile", ylab1 = "Chi", ylab2 = "Chi Bar", 
          ask = nb.fig < length(which) && dev.interactive(), ...) 
{
  data <- na.omit(data)
  n <- nrow(data)
  data <- cbind(rank(data[, 1])/(n + 1), rank(data[, 2])/(n + 
                                                            1))
  rowmax <- apply(data, 1, max)
  rowmin <- apply(data, 1, min)
  eps <- .Machine$double.eps^0.5
  qlim2 <- c(min(rowmax) + eps, max(rowmin) - eps)
  if (!is.null(qlim)) {
    if (qlim[1] < qlim2[1]) 
      stop("lower quantile limit is too low")
    if (qlim[2] > qlim2[2]) 
      stop("upper quantile limit is too high")
    if (qlim[1] > qlim[2]) 
      stop("lower quantile limit is less than upper quantile limit")
  }
  else qlim <- qlim2
  u <- seq(qlim[1], qlim[2], length = nq)
  cu <- cbaru <- numeric(nq)
  for (i in 1:nq) cu[i] <- mean(rowmax < u[i])
  for (i in 1:nq) cbaru[i] <- mean(rowmin > u[i])
  chiu <- 2 - log(cu)/log(u)
  chibaru <- (2 * log(1 - u))/log(cbaru) - 1
  cnst <- qnorm((1 + conf)/2)
  varchi <- ((1/log(u)^2 * 1)/cu^2 * cu * (1 - cu))/n
  varchi <- cnst * sqrt(varchi)
  varchibar <- (((4 * log(1 - u)^2)/(log(cbaru)^4 * cbaru^2)) * 
                  cbaru * (1 - cbaru))/n
  varchibar <- cnst * sqrt(varchibar)
  chiu <- cbind(chilow = chiu - varchi, chi = chiu, chiupp = chiu + 
                  varchi)
  chibaru <- cbind(chiblow = chibaru - varchibar, chib = chibaru, 
                   chibupp = chibaru + varchibar)
  chiulb <- 2 - log(pmax(2 * u - 1, 0))/log(u)
  chibarulb <- 2 * log(1 - u)/log(1 - 2 * u + pmax(2 * u - 
                                                     1, 0)) - 1
  if (trunc) {
    chiu[chiu > 1] <- 1
    chibaru[chibaru > 1] <- 1
    chiu <- apply(chiu, 2, function(x) pmax(x, chiulb))
    chibaru <- apply(chibaru, 2, function(x) pmax(x, chibarulb))
  }
  show <- logical(2)
  show[which] <- TRUE
  lty <- c(cilty, lty, cilty)
  col <- c(cicol, col, cicol)
  nb.fig <- prod(par("mfcol"))
  if (ask) {
    op <- par(ask = TRUE)
    on.exit(par(op))
  }
  if (show[1]) {
    matplot(u, chiu, type = "l", lty = lty, col = col, 
            xlim = xlim, ylim = ylim1, main = main1, xlab = xlab, 
            ylab = ylab1, ...)
    if (spcases) {
      segments(qlim[1], 0, qlim[2], 0, lty = 5, col = "grey")
      segments(qlim[1], 1, qlim[2], 1, lty = 5, col = "grey")
      lines(u, chiulb, lty = 5, col = "grey")
    }
  }
  if (show[2]) {
    matplot(u, chibaru, type = "l", lty = lty, col = col, 
            xlim = xlim, ylim = ylim2, main = main2, xlab = xlab, 
            ylab = ylab2, ...)
    if (spcases) {
      segments(qlim[1], 0, qlim[2], 0, lty = 5, col = "grey")
      segments(qlim[1], 1, qlim[2], 1, lty = 5, col = "grey")
      lines(u, chibarulb, lty = 5, col = "grey")
    }
  }
  plvals <- list(quantile = u, chi = chiu, chibar = chibaru)
  if (!show[1]) 
    plvals$chi <- NULL
  if (!show[2]) 
    plvals$chib <- NULL
  invisible(plvals)
}