loc_sig <- c(max(loc_mu), sigl) + 1
} else {
sigl <- max(mul) + ll_sig[[1]]
loc_sig <- c(max(loc_mu), sigl) + 1
}
}
in2 <- log(sqrt(6 * var(x,na.rm=TRUE)/pi))
siginit <- c(in2, rep(0, length(sigl)))
fit <- try(gev_fix(x, y, mul = mul, sigl = sigl, siglink = exp, siginit = siginit, fix.sh=fix.sh, show = FALSE),silent=TRUE)
if('try-error' %in% class(fit)){
fit <- NULL
name <- paste0("fit", i)
assign(name, fit)
next
}else{
fit <- gev_fix(x, y, mul = mul, sigl = sigl, siglink = exp, siginit = siginit, fix.sh=fix.sh, show = FALSE)
fit[["AIC"]] <- 2 * (length(fit$mle) + fit$nllh)
fit[["formulation"]] <- com
fit[["est_mu"]] <- CI(as.matrix(cbind(rep(1, 40), ll_mu[[2]])), fit$mle[loc_mu], fit$cov[loc_mu, loc_mu])
fit[["est_sig"]] <- CI(as.matrix(cbind(rep(1, 40), ll_sig[[2]])), fit$mle[loc_sig], fit$cov[loc_sig, loc_sig])
est_sh <- matrix(NA, ncol=3,nrow=length(x))
est_sh[,1] <- fix.sh
est_sh[,2] <- fix.sh + sh.se
est_sh[,3] <- fix.sh - sh.se
est_sh <- as.data.frame(est_sh)
est_sh <- cbind(1:40, est_sh)
names(est_sh) <- c("t","est","U","L")
fit[["est_sh"]] <- est_sh
}
name <- paste0("fit", i)
assign(name, fit)
}
AIC <- rep(100000,9)
for (i in rank) {
if(!is_empty(get(paste0("fit", i)))){
AIC[i] <- get(paste0("fit", i))$AIC
}
}
fit <- get(paste0("fit", which.min(AIC)))
return(fit)
}
fit_abrupt_sh <- function(x, mu, sig, fix.sh, sh.se, para=c("break", "single", "s")) {
co <- data.frame(mu = NA, sig = NA)
n <- 1
for (i in 1:3) {
for (j in 1:3) {
co[n, 1] <- para[i]
co[n, 2] <- para[j]
n <- n + 1
}
}
single <- 1:length(x)
double_mu <- cut_breakpoint(1:length(x), mu, TRUE)
double_sig <- cut_breakpoint(1:length(x), sig, TRUE)
rank <- which(apply(co,1,function(x) "break" %in% x))
for (i in rank) {
com <- co[i, ]
ll_mu <- ll(com$mu, para, double_mu,TRUE)
ll_sig <- ll(com$sig, para, double_sig,TRUE)
y <- cbind(1, ll_mu[[2]], ll_sig[[2]])
if (is_empty(ll_mu[[1]])) {
mul <- NULL
loc_mu <- 1
} else {
mul <- ll_mu[[1]] + 1
loc_mu <- c(1, mul)
}
if (is_empty(ll_sig[[1]])) {
sigl <- NULL
loc_sig <- max(loc_mu) + 1
} else {
if (is_empty(mul)) {
sigl <- 1 + ll_sig[[1]]
loc_sig <- c(max(loc_mu), sigl) + 1
} else {
sigl <- max(mul) + ll_sig[[1]]
loc_sig <- c(max(loc_mu), sigl) + 1
}
}
in2 <- log(sqrt(6 * var(x,na.rm = TRUE)/pi))
siginit <- c(in2, rep(0, length(sigl)))
fit <- try(gev_fix(x, y, mul = mul, sigl = sigl, siglink = exp, siginit = siginit, fix.sh=fix.sh, show = FALSE),silent=TRUE)
if('try-error' %in% class(fit)){
fit <- NULL
name <- paste0("fit", i)
assign(name, fit)
next
}else{
fit <- gev_fix(x, y, mul = mul, sigl = sigl, siglink = exp, siginit = siginit, fix.sh=fix.sh, show = FALSE)
fit[["AIC"]] <- 2 * (length(fit$mle) + fit$nllh)
fit[["formulation"]] <- com
fit[["est_mu"]] <- CI(as.matrix(cbind(rep(1, 40), ll_mu[[2]])), fit$mle[loc_mu], fit$cov[loc_mu, loc_mu])
fit[["est_sig"]] <- CI(as.matrix(cbind(rep(1, 40), ll_sig[[2]])), fit$mle[loc_sig], fit$cov[loc_sig, loc_sig])
est_sh <- matrix(NA, ncol=3,nrow=length(x))
est_sh[,1] <- fix.sh
est_sh[,2] <- fix.sh + sh.se
est_sh[,3] <- fix.sh - sh.se
est_sh <- as.data.frame(est_sh)
est_sh <- cbind(1:40, est_sh)
names(est_sh) <- c("t","est","U","L")
fit[["est_sh"]] <- est_sh
}
name <- paste0("fit", i)
assign(name, fit)
}
AIC <- rep(100000,27)
for (i in rank) {
if(!is_empty(get(paste0("fit", i)))){
AIC[i] <- get(paste0("fit", i))$AIC
}
}
fit <- get(paste0("fit", which.min(AIC)))
return(fit)
}
x <- Region$V1
fit1 <- fit_linear_sh(x, point[1, 1], point[1, 2], sh[1],se[1])
fit2 <- fit_quad_sh(x,sh[1],se[1])
fit3 <- fit_abrupt_sh(x, point[i, 1], point[i, 2], point[i, 3])
fit_list <- list(fit1[[1]], fit1[[2]], fit1[[3]], fit1[[4]], fit2, fit3)
r <- which.min(c(
fit1[[2]]$AIC,
fit1[[3]]$AIC,
fit1[[4]]$AIC,
fit2$AIC,
fit3$AIC
))
fit_list[[7]] <- fit_list[[r + 1]]
nR2 <- return_level(fit_list[[7]], 1 / 2)
nR10 <- return_level(fit_list[[7]], 1 / 10)
nR100 <- return_level(fit_list[[7]], 1 / 100)
R2 <- return_level(fit1[[2]], 1 / 2)
R10 <- return_level(fit1[[2]], 1 / 10)
R100 <- return_level(fit1[[2]], 1 / 100)
p2 <- ggplot(nR2) +
geom_line(aes(x = Year, y = est, color = "nsGEV", linetype = "model")) +
geom_line(aes(x = Year, y = U, color = "nsGEV", linetype = "95% CI")) +
geom_line(aes(x = Year, y = L, color = "nsGEV", linetype = "95% CI")) +
geom_line(data = R2, aes(x = Year, y = est, color = "sGEV", linetype = "model")) +
geom_line(data = R2, aes(x = Year, y = U, color = "sGEV", linetype = "95% CI")) +
geom_line(data = R2, aes(x = Year, y = L, color = "sGEV", linetype = "95% CI")) +
labs(title = paste0("Region", i, ": 2-year"), ylab = "Return level") +
xlab(NULL)+
ylab("Return level") +
scale_linetype_manual(values = c(2, 1))
p2
p10 <- ggplot(nR10) +
geom_line(aes(x = Year, y = est, color = "nsGEV", linetype = "model")) +
geom_line(aes(x = Year, y = U, color = "nsGEV", linetype = "95% CI")) +
geom_line(aes(x = Year, y = L, color = "nsGEV", linetype = "95% CI")) +
geom_line(data = R10, aes(x = Year, y = est, color = "sGEV", linetype = "model")) +
geom_line(data = R10, aes(x = Year, y = U, color = "sGEV", linetype = "95% CI")) +
geom_line(data = R10, aes(x = Year, y = L, color = "sGEV", linetype = "95% CI")) +
labs(title = paste0("Region", i, ": 10-year")) +
xlab(NULL)+
ylab(NULL)+
scale_linetype_manual(values = c(2, 1))
p10
p10 <- ggplot(nR10) +
geom_line(aes(x = Year, y = est, color = "nsGEV", linetype = "model")) +
geom_line(aes(x = Year, y = U, color = "nsGEV", linetype = "95% CI")) +
geom_line(aes(x = Year, y = L, color = "nsGEV", linetype = "95% CI")) +
geom_line(data = R10, aes(x = Year, y = est, color = "sGEV", linetype = "model")) +
geom_line(data = R10, aes(x = Year, y = U, color = "sGEV", linetype = "95% CI")) +
geom_line(data = R10, aes(x = Year, y = L, color = "sGEV", linetype = "95% CI")) +
labs(title = paste0("Region", i, ": 10-year")) +
xlab(NULL)+
ylab(NULL)+
scale_linetype_manual(values = c(2, 1))
p10
p100 <- ggplot(nR100) +
geom_line(aes(x = Year, y = est, color = "nsGEV", linetype = "model")) +
geom_line(aes(x = Year, y = U, color = "nsGEV", linetype = "95% CI")) +
geom_line(aes(x = Year, y = L, color = "nsGEV", linetype = "95% CI")) +
geom_line(data = R100, aes(x = Year, y = est, color = "sGEV", linetype = "model")) +
geom_line(data = R100, aes(x = Year, y = U, color = "sGEV", linetype = "95% CI")) +
geom_line(data = R100, aes(x = Year, y = L, color = "sGEV", linetype = "95% CI")) +
labs(title = paste0("Region", i, ": 100-year"), ylab = "Return level") +
xlab(NULL)+
ylab(NULL)+
scale_linetype_manual(values = c(2, 1))
p100
fit3 <- fit_abrupt_sh(x, point[i, 1], point[i, 2], sh[1],se[1])
fit1 <- fit_linear_sh(x, point[1, 1], point[1, 2], sh[1],se[1])
fit2 <- fit_quad_sh(x,sh[1],se[1])
fit3 <- fit_abrupt_sh(x, point[i, 1], point[i, 2], sh[1],se[1])
fit_list <- list(fit1[[1]], fit1[[2]], fit1[[3]], fit1[[4]], fit2, fit3)
r <- which.min(c(
fit1[[2]]$AIC,
fit1[[3]]$AIC,
fit1[[4]]$AIC,
fit2$AIC,
fit3$AIC
))
fit_list[[7]] <- fit_list[[r + 1]]
nR2 <- return_level(fit_list[[7]], 1 / 2)
nR10 <- return_level(fit_list[[7]], 1 / 10)
nR100 <- return_level(fit_list[[7]], 1 / 100)
R2 <- return_level(fit1[[2]], 1 / 2)
R10 <- return_level(fit1[[2]], 1 / 10)
R100 <- return_level(fit1[[2]], 1 / 100)
p2 <- ggplot(nR2) +
geom_line(aes(x = Year, y = est, color = "nsGEV", linetype = "model")) +
geom_line(aes(x = Year, y = U, color = "nsGEV", linetype = "95% CI")) +
geom_line(aes(x = Year, y = L, color = "nsGEV", linetype = "95% CI")) +
geom_line(data = R2, aes(x = Year, y = est, color = "sGEV", linetype = "model")) +
geom_line(data = R2, aes(x = Year, y = U, color = "sGEV", linetype = "95% CI")) +
geom_line(data = R2, aes(x = Year, y = L, color = "sGEV", linetype = "95% CI")) +
labs(title = paste0("Region", i, ": 2-year"), ylab = "Return level") +
xlab(NULL)+
ylab("Return level") +
scale_linetype_manual(values = c(2, 1))
p2
p10 <- ggplot(nR10) +
geom_line(aes(x = Year, y = est, color = "nsGEV", linetype = "model")) +
geom_line(aes(x = Year, y = U, color = "nsGEV", linetype = "95% CI")) +
geom_line(aes(x = Year, y = L, color = "nsGEV", linetype = "95% CI")) +
geom_line(data = R10, aes(x = Year, y = est, color = "sGEV", linetype = "model")) +
geom_line(data = R10, aes(x = Year, y = U, color = "sGEV", linetype = "95% CI")) +
geom_line(data = R10, aes(x = Year, y = L, color = "sGEV", linetype = "95% CI")) +
labs(title = paste0("Region", i, ": 10-year")) +
xlab(NULL)+
ylab(NULL)+
scale_linetype_manual(values = c(2, 1))
p10
p100 <- ggplot(nR100) +
geom_line(aes(x = Year, y = est, color = "nsGEV", linetype = "model")) +
geom_line(aes(x = Year, y = U, color = "nsGEV", linetype = "95% CI")) +
geom_line(aes(x = Year, y = L, color = "nsGEV", linetype = "95% CI")) +
geom_line(data = R100, aes(x = Year, y = est, color = "sGEV", linetype = "model")) +
geom_line(data = R100, aes(x = Year, y = U, color = "sGEV", linetype = "95% CI")) +
geom_line(data = R100, aes(x = Year, y = L, color = "sGEV", linetype = "95% CI")) +
labs(title = paste0("Region", i, ": 100-year"), ylab = "Return level") +
xlab(NULL)+
ylab(NULL)+
scale_linetype_manual(values = c(2, 1))
p100
gra <- list()
return_plot <- list()
for (i in 1:18) {
assign("Region", Stream_plot[Region == index[i]][, max(Q), by = DecYear])
x <- Region$V1
fit1 <- fit_linear_sh(x, point[i, 1], point[i, 2], sh[i],se[i])
fit2 <- fit_quad_sh(x,sh[i],se[i])
fit3 <- fit_abrupt_sh(x, point[i, 1], point[i, 2], sh[i],se[i])
fit_list <- list(fit1[[1]], fit1[[2]], fit1[[3]], fit1[[4]], fit2, fit3)
r <- which.min(c(
fit1[[2]]$AIC,
fit1[[3]]$AIC,
fit1[[4]]$AIC,
fit2$AIC,
fit3$AIC
))
fit_list[[7]] <- fit_list[[r + 1]]
nR2 <- return_level(fit_list[[7]], 1 / 2)
nR10 <- return_level(fit_list[[7]], 1 / 10)
nR100 <- return_level(fit_list[[7]], 1 / 100)
R2 <- return_level(fit1[[2]], 1 / 2)
R10 <- return_level(fit1[[2]], 1 / 10)
R100 <- return_level(fit1[[2]], 1 / 100)
p2 <- ggplot(nR2) +
geom_line(aes(x = Year, y = est, color = "nsGEV", linetype = "model")) +
geom_line(aes(x = Year, y = U, color = "nsGEV", linetype = "95% CI")) +
geom_line(aes(x = Year, y = L, color = "nsGEV", linetype = "95% CI")) +
geom_line(data = R2, aes(x = Year, y = est, color = "sGEV", linetype = "model")) +
geom_line(data = R2, aes(x = Year, y = U, color = "sGEV", linetype = "95% CI")) +
geom_line(data = R2, aes(x = Year, y = L, color = "sGEV", linetype = "95% CI")) +
labs(title = paste0("Region", i, ": 2-year"), ylab = "Return level") +
xlab(NULL)+
ylab("Return level") +
scale_linetype_manual(values = c(2, 1))
p10 <- ggplot(nR10) +
geom_line(aes(x = Year, y = est, color = "nsGEV", linetype = "model")) +
geom_line(aes(x = Year, y = U, color = "nsGEV", linetype = "95% CI")) +
geom_line(aes(x = Year, y = L, color = "nsGEV", linetype = "95% CI")) +
geom_line(data = R10, aes(x = Year, y = est, color = "sGEV", linetype = "model")) +
geom_line(data = R10, aes(x = Year, y = U, color = "sGEV", linetype = "95% CI")) +
geom_line(data = R10, aes(x = Year, y = L, color = "sGEV", linetype = "95% CI")) +
labs(title = paste0("Region", i, ": 10-year")) +
xlab(NULL)+
ylab(NULL)+
scale_linetype_manual(values = c(2, 1))
p100 <- ggplot(nR100) +
geom_line(aes(x = Year, y = est, color = "nsGEV", linetype = "model")) +
geom_line(aes(x = Year, y = U, color = "nsGEV", linetype = "95% CI")) +
geom_line(aes(x = Year, y = L, color = "nsGEV", linetype = "95% CI")) +
geom_line(data = R100, aes(x = Year, y = est, color = "sGEV", linetype = "model")) +
geom_line(data = R100, aes(x = Year, y = U, color = "sGEV", linetype = "95% CI")) +
geom_line(data = R100, aes(x = Year, y = L, color = "sGEV", linetype = "95% CI")) +
labs(title = paste0("Region", i, ": 100-year"), ylab = "Return level") +
xlab(NULL)+
ylab(NULL)+
scale_linetype_manual(values = c(2, 1))
return_plot[[i]] <- list(p2, p10, p100)
est <- graph_data(
fit_list,
c("linear_fit", "s_fit", "single_fit", "double_fit", "quad_fit", "abrupt_fit", "best_fit")
)
gra[[i]] <- plot_para(
est[[1]], est[[2]], est[[3]],
Region, i,
ignore = c("linear_fit", "s_fit", "single_fit", "double_fit", "quad_fit", "abrupt_fit")
)
print(paste("region", i))
print(round(fit_list[[7]]$mle, 2))
print(fit_list[[7]]$formulation)
}
plot_final <- list()
for (i in 13:18) {
p <- gra[[i]]
plot_final[[3 * (i - 1) + 1]] <- p[[1]]
plot_final[[3 * (i - 1) + 2]] <- p[[2]]
plot_final[[3 * (i - 1) + 3]] <- p[[3]]
}
plot_final[["ncol"]] <- 3
plot_final[["nrow"]] <- 6
plot_final[["legend"]] <- FALSE
# plot_final[["common.legend"]] <- TRUE
# save(plot_final,file = "best.Rdata")
do.call(ggarrange, plot_final)
plot_final <- list()
for (i in 1:6) {
p <- gra[[i]]
plot_final[[3 * (i - 1) + 1]] <- p[[1]]
plot_final[[3 * (i - 1) + 2]] <- p[[2]]
plot_final[[3 * (i - 1) + 3]] <- p[[3]]
}
plot_final[["ncol"]] <- 3
plot_final[["nrow"]] <- 6
plot_final[["legend"]] <- FALSE
# plot_final[["common.legend"]] <- TRUE
# save(plot_final,file = "best.Rdata")
do.call(ggarrange, plot_final)
for (i in 7:12) {
p <- gra[[i]]
plot_final[[3 * (i - 1) + 1]] <- p[[1]]
plot_final[[3 * (i - 1) + 2]] <- p[[2]]
plot_final[[3 * (i - 1) + 3]] <- p[[3]]
}
plot_final[["ncol"]] <- 3
plot_final[["nrow"]] <- 6
plot_final[["legend"]] <- FALSE
# plot_final[["common.legend"]] <- TRUE
# save(plot_final,file = "best.Rdata")
do.call(ggarrange, plot_final)
for (i in 13:18) {
p <- gra[[i]]
plot_final[[3 * (i - 1) + 1]] <- p[[1]]
plot_final[[3 * (i - 1) + 2]] <- p[[2]]
plot_final[[3 * (i - 1) + 3]] <- p[[3]]
}
plot_final[["ncol"]] <- 3
plot_final[["nrow"]] <- 6
plot_final[["legend"]] <- FALSE
# plot_final[["common.legend"]] <- TRUE
# save(plot_final,file = "best.Rdata")
do.call(ggarrange, plot_final)
for (i in 1:6) {
p <- return_plot[[i]]
plot_final[[3 * (i - 1) + 1]] <- p[[1]]
plot_final[[3 * (i - 1) + 2]] <- p[[2]]
plot_final[[3 * (i - 1) + 3]] <- p[[3]]
}
plot_final[["ncol"]] <- 3
plot_final[["nrow"]] <- 6
plot_final[["common.legend"]] <- TRUE
# save(plot_final,file = "best.Rdata")
do.call(ggarrange, plot_final)
plot_final <- list()
for (i in 1:6) {
p <- return_plot[[i]]
plot_final[[3 * (i - 1) + 1]] <- p[[1]]
plot_final[[3 * (i - 1) + 2]] <- p[[2]]
plot_final[[3 * (i - 1) + 3]] <- p[[3]]
}
plot_final[["ncol"]] <- 3
plot_final[["nrow"]] <- 6
plot_final[["common.legend"]] <- TRUE
# save(plot_final,file = "best.Rdata")
do.call(ggarrange, plot_final)
plot_final <- list()
for (i in 7:12) {
p <- return_plot[[i]]
plot_final[[3 * (i - 1) + 1]] <- p[[1]]
plot_final[[3 * (i - 1) + 2]] <- p[[2]]
plot_final[[3 * (i - 1) + 3]] <- p[[3]]
}
plot_final[["ncol"]] <- 3
plot_final[["nrow"]] <- 6
plot_final[["common.legend"]] <- TRUE
# save(plot_final,file = "best.Rdata")
do.call(ggarrange, plot_final)
for (i in 13:18) {
p <- return_plot[[i]]
plot_final[[3 * (i - 1) + 1]] <- p[[1]]
plot_final[[3 * (i - 1) + 2]] <- p[[2]]
plot_final[[3 * (i - 1) + 3]] <- p[[3]]
}
plot_final[["ncol"]] <- 3
plot_final[["nrow"]] <- 6
plot_final[["common.legend"]] <- TRUE
# save(plot_final,file = "best.Rdata")
do.call(ggarrange, plot_final)
for (i in 1:6) {
p <- gra[[i]]
plot_final[[3 * (i - 1) + 1]] <- p[[1]]
plot_final[[3 * (i - 1) + 2]] <- p[[2]]
plot_final[[3 * (i - 1) + 3]] <- p[[3]]
}
plot_final[["ncol"]] <- 3
plot_final[["nrow"]] <- 6
plot_final[["legend"]] <- FALSE
# plot_final[["common.legend"]] <- TRUE
# save(plot_final,file = "best.Rdata")
do.call(ggarrange, plot_final)
#### arrange plot ####
plot_final <- list()
for (i in 1:6) {
p <- gra[[i]]
plot_final[[3 * (i - 1) + 1]] <- p[[1]]
plot_final[[3 * (i - 1) + 2]] <- p[[2]]
plot_final[[3 * (i - 1) + 3]] <- p[[3]]
}
plot_final[["ncol"]] <- 3
plot_final[["nrow"]] <- 6
plot_final[["legend"]] <- FALSE
# plot_final[["common.legend"]] <- TRUE
# save(plot_final,file = "best.Rdata")
do.call(ggarrange, plot_final)
plot_final <- list()
for (i in 7:12) {
p <- gra[[i]]
plot_final[[3 * (i - 1) + 1]] <- p[[1]]
plot_final[[3 * (i - 1) + 2]] <- p[[2]]
plot_final[[3 * (i - 1) + 3]] <- p[[3]]
}
plot_final[["ncol"]] <- 3
plot_final[["nrow"]] <- 6
plot_final[["legend"]] <- FALSE
# plot_final[["common.legend"]] <- TRUE
# save(plot_final,file = "best.Rdata")
do.call(ggarrange, plot_final)
for (i in 13:18) {
p <- gra[[i]]
plot_final[[3 * (i - 1) + 1]] <- p[[1]]
plot_final[[3 * (i - 1) + 2]] <- p[[2]]
plot_final[[3 * (i - 1) + 3]] <- p[[3]]
}
plot_final[["ncol"]] <- 3
plot_final[["nrow"]] <- 6
plot_final[["legend"]] <- FALSE
# plot_final[["common.legend"]] <- TRUE
# save(plot_final,file = "best.Rdata")
do.call(ggarrange, plot_final)
plot_final <- list()
for (i in 1:6) {
p <- return_plot[[i]]
plot_final[[3 * (i - 1) + 1]] <- p[[1]]
plot_final[[3 * (i - 1) + 2]] <- p[[2]]
plot_final[[3 * (i - 1) + 3]] <- p[[3]]
}
plot_final[["ncol"]] <- 3
plot_final[["nrow"]] <- 6
plot_final[["common.legend"]] <- TRUE
# save(plot_final,file = "best.Rdata")
do.call(ggarrange, plot_final)
for (i in 7:12) {
p <- return_plot[[i]]
plot_final[[3 * (i - 1) + 1]] <- p[[1]]
plot_final[[3 * (i - 1) + 2]] <- p[[2]]
plot_final[[3 * (i - 1) + 3]] <- p[[3]]
}
plot_final[["ncol"]] <- 3
plot_final[["nrow"]] <- 6
plot_final[["common.legend"]] <- TRUE
# save(plot_final,file = "best.Rdata")
do.call(ggarrange, plot_final)
plot_final <- list()
for (i in 13:18) {
p <- return_plot[[i]]
plot_final[[3 * (i - 1) + 1]] <- p[[1]]
plot_final[[3 * (i - 1) + 2]] <- p[[2]]
plot_final[[3 * (i - 1) + 3]] <- p[[3]]
}
plot_final[["ncol"]] <- 3
plot_final[["nrow"]] <- 6
plot_final[["common.legend"]] <- TRUE
# save(plot_final,file = "best.Rdata")
do.call(ggarrange, plot_final)
plot_final <- list()
for (i in 7:12) {
p <- return_plot[[i]]
plot_final[[3 * (i - 1) + 1]] <- p[[1]]
plot_final[[3 * (i - 1) + 2]] <- p[[2]]
plot_final[[3 * (i - 1) + 3]] <- p[[3]]
}
plot_final[["ncol"]] <- 3
plot_final[["nrow"]] <- 6
plot_final[["common.legend"]] <- TRUE
# save(plot_final,file = "best.Rdata")
do.call(ggarrange, plot_final)
for (i in 1:18) {
assign("Region", Stream_plot[Region == index[i]][, max(Q), by = DecYear])
MOV <- Moving_window(
x = Region, win = 10, url = "F:/StreamFlow/Plot/Moving_Windows",
save = FALSE, name = quote(Region1)
)
x <- Region$V1
points[i,1] <-  breakpoints(Fstats(MOV[,2] ~ 1))$breakpoints
points[i,2] <-  breakpoints(Fstats(MOV[,3] ~ 1))$breakpoints
points[i,3] <-  breakpoints(Fstats(x ~ 1))$breakpoints
}
View(point)
