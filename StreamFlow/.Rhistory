FlowCon <- t(FlowCon)
FlowCon[lower.tri(FlowCon)] <- con
m <- matrix(NA, ncol = 27, nrow = 27)
m[lower.tri(m)] <- 1:351
theta <- as.data.frame(theta)
theta$group <- con
theta <- theta %>% mutate(
group = ifelse(group==1, "connected", "unconnected")
)
ggplot(data = theta) +
geom_point(aes(x = dist, y=ext.coeff, color = as.factor(group))) +
coord_fixed(ratio = 10) +
ylim(c(1,2))
ggplot(data = theta) +
geom_point(aes(x = dist, y=ext.coeff, color = as.factor(group))) +
# coord_fixed(ratio = 10) +
ylim(c(1,2))
locations <- new %>% select(dec_long_va, dec_lat_va)
locations <- as.matrix(locations)
colnames(locations) <- c("lon", "lat")
library(SpatialExtremes)
##Compute the madogram
theta <- madogram(DataEvents, locations)
locations <- new %>% select(dec_long_va, dec_lat_va)
locations[-c(14:16)] <- as.matrix(locations)
colnames(locations) <- c("lon", "lat")
library(SpatialExtremes)
##Compute the madogram
theta2 <- madogram(DataEvents, locations)
knitr::opts_chunk$set(echo = FALSE, comment = NA, message = FALSE, warning = FALSE, eval=TRUE)
library(EGRET)
library(dataRetrieval)
library(tidyverse)
library(leaflet)
library(rgeos)
library(data.table)
library(kableExtra)
load("F:/StreamFlow/joint_fitting/joint.Rdata")
bound <- sf::st_read(dsn = "F:/StreamFlow/wbdhu2_a_us_september2020.gdb")
GetURL <- function(service, host = "basemap.nationalmap.gov") {
sprintf("https://%s/arcgis/services/%s/MapServer/WmsServer", host, service)
}
bound %>% filter(huc2=="07") %>%
leaflet(width = "100%") %>%
#  setView(lng = -95, lat = 40, zoom = 4) %>%
addCircleMarkers(
data = new %>% mutate(index = 1:27),
lng = ~dec_long_va,
lat = ~dec_lat_va,
radius = ~3,
label = ~ htmltools::htmlEscape(index),
labelOptions = labelOptions(noHide = T, direction = 'top', textOnly = T),
stroke = FALSE,
fill = TRUE,
color = "red",
fillOpacity = 0.4,
)  %>%
addWMSTiles(GetURL("USGSHydroCached"), layers = "0")
data <- data %>% filter(Month %in% 6:8)
data$station <- rep(new$site_no,each = 3680)
data <- data[Q >= 0]
data_plot <- data[, c("station", "Q", "DecYear", "Month")]
data_plot$Month <- as.factor(data_plot$Month)
data_plot %>% group_by(DecYear, Month) %>%
summarise(meanQ=mean(Q)) %>%
ggplot(aes(x=DecYear,y=meanQ,group=Month, color = Month), color = Month)+
geom_line()
maxi <- data %>%
group_by(station, DecYear) %>%
summarise(maxQ=max(Q))
maxi %>%
filter(station == "05211000") %>%
dplyr::select(DecYear, maxQ) %>%
head() %>%
kable()
source("F:/Extre/Codes/Functions.R")
## extraction of events
data <- data %>% select(Date, Q)
data$station <- rep(new$site_no,each = 3680)
data <- data %>% spread(station, Q)
StsChos <- c(1:27)
NoSt <- length(StsChos)
Years <- unique(as.numeric(substr(data$Date,1,4)))
StNames <- as.character(StsChos)
YearsWithEvent <- numeric()
AllEvMat <- matrix(0,length(StNames),1)
AllRes <- list()
for (i in 1:length(Years)){
# events in the i^th year at each station
Res <- ObtainMultVarEvents(TSs=data,U=0.1,Lag=4,Year=Years[i],StNames=StNames,Plotting=0,mfrow=c(NoSt,1))  ## For Censored Likelihood
Events <- Res$AllEvMat
Locations <- Res$Location
if (length(Events)>0) {
YearsWithEvent <- c(YearsWithEvent,rep(Years[i],dim(Events)[2]))
AllEvMat <- cbind(AllEvMat,Events)
}
AllRes[[i]] <- Res
}
DataEvents <- t(AllEvMat[,-1])
rownames(DataEvents) <- YearsWithEvent
head(DataEvents[,1:3],20) %>% kable()%>%
kable_styling(full_width = F)
DataEvents <- DataEvents[,-c(14:16)]
CW <- read.csv("weight.csv")
CatchtrWt <- CW %>% select(wx,wy)
p <- cbind(CatchtrWt$wy, CatchtrWt$wx)
library(SpatialExtremes)
library(geosphere)
RiverDisWt <- distm(p, p, fun = distHaversine)
RiverDisWt <- RiverDisWt/1000
FlowCon <- read.csv("F:/StreamFlow/joint_fitting/FlowCon.csv",header = FALSE)
FlowCon <- FlowCon[-c(14:16),-c(14:16)]
con <- FlowCon[lower.tri(FlowCon)]
FlowCon <- t(FlowCon)
FlowCon[lower.tri(FlowCon)] <- con
Theta.cen <- matrix(1,ncol = 24,nrow = 24)
for(i in 1:(24-1))
for(j in (i+1):24) {
Data.biv <- DataEvents[,c(i,j)]
Theta.cen[i,j] <- CensoredEstimationHR(Data.biv, thresholds = .90)
Theta.cen[j,i] <- Theta.cen[i,j]
}
Theta <- Theta.cen
Theta <- Theta[lower.tri(Theta)]
dist <- RiverDisWt[lower.tri(RiverDisWt)]
Theta <- data.frame(Theta, dist)
Theta$group <- con
Theta <- Theta %>% mutate(
group = ifelse(group==1, "connected", "unconnected")
)
ggplot(data = Theta[-c(103,121),]) +
geom_point(aes(x = dist, y=Theta, color = as.factor(group))) +
#  coord_fixed(ratio = 10) +
ylim(c(1,2))
m <- matrix(NA, ncol = 24, nrow = 24)
m[lower.tri(m)] <- 1:276
theta <- madogram(DataEvents, as.matrix(RiverDisWt))
theta <- as.data.frame(theta)
theta$group <- con
theta <- theta %>% mutate(
group = ifelse(group==1, "connected", "unconnected")
)
ggplot(data = theta[-c(103,121),]) +
geom_point(aes(x = dist, y=ext.coeff, color = as.factor(group))) +
#  coord_fixed(ratio = 10) +
ylim(c(1,2))
locations <- new %>% select(dec_long_va, dec_lat_va)
locations[-c(14:16)] <- as.matrix(locations)
colnames(locations) <- c("lon", "lat")
locations <- new %>% select(dec_long_va, dec_lat_va)
locations <- as.matrix(locations[-c(14:16),])
colnames(locations) <- c("lon", "lat")
library(SpatialExtremes)
##Compute the madogram
theta2 <- madogram(DataEvents, locations)
theta2 <- as.data.frame(theta2)
theta2$group <- con
theta2 <- theta2 %>% mutate(
group = ifelse(group==1, "connected", "unconnected")
)
ggplot(data = theta2[-c(103,121),]) +
geom_point(aes(x = dist, y=ext.coeff, color = as.factor(group))) +
#  coord_fixed(ratio = 10) +
ylim(c(1,2))
theta <- as.data.frame(theta)
theta$group <- con
theta <- theta %>% mutate(
group = ifelse(group==1, "connected", "unconnected")
)
ggplot(data = theta[-c(103,121),]) +
geom_point(aes(x = dist, y=ext.coeff, color = as.factor(group)),size = 2) +
#  coord_fixed(ratio = 10) +
ylim(c(1,2))
Theta2 <- Theta.cen
Theta2 <- Theta2[lower.tri(Theta2)]
dist <- theta2$dist
Theta2 <- data.frame(Theta2, dist)
Theta2$group <- con
Theta2 <- Theta2 %>% mutate(
group = ifelse(group==1, "connected", "unconnected")
)
ggplot(data = Theta2[-c(103,121),]) +
geom_point(aes(x = dist, y=Theta2, color = as.factor(group)),size = 2) +
#  coord_fixed(ratio = 10) +
ylim(c(1,2))
knitr::opts_chunk$set(echo = FALSE, comment = NA, message = FALSE, warning = FALSE, eval=TRUE)
library(EGRET)
library(dataRetrieval)
library(tidyverse)
library(leaflet)
library(rgeos)
library(data.table)
library(kableExtra)
load("F:/StreamFlow/joint_fitting/joint.Rdata")
bound <- sf::st_read(dsn = "F:/StreamFlow/wbdhu2_a_us_september2020.gdb")
GetURL <- function(service, host = "basemap.nationalmap.gov") {
sprintf("https://%s/arcgis/services/%s/MapServer/WmsServer", host, service)
}
bound %>% filter(huc2=="07") %>%
leaflet(width = "100%") %>%
#  setView(lng = -95, lat = 40, zoom = 4) %>%
addCircleMarkers(
data = new %>% mutate(index = 1:27),
lng = ~dec_long_va,
lat = ~dec_lat_va,
radius = ~3,
label = ~ htmltools::htmlEscape(index),
labelOptions = labelOptions(noHide = T, direction = 'top', textOnly = T),
stroke = FALSE,
fill = TRUE,
color = "red",
fillOpacity = 0.4,
)  %>%
addWMSTiles(GetURL("USGSHydroCached"), layers = "0")
data <- data %>% filter(Month %in% 6:8)
data$station <- rep(new$site_no,each = 3680)
data <- data[Q >= 0]
data_plot <- data[, c("station", "Q", "DecYear", "Month")]
data_plot$Month <- as.factor(data_plot$Month)
data_plot %>% group_by(DecYear, Month) %>%
summarise(meanQ=mean(Q)) %>%
ggplot(aes(x=DecYear,y=meanQ,group=Month, color = Month), color = Month)+
geom_line()
maxi <- data %>%
group_by(station, DecYear) %>%
summarise(maxQ=max(Q))
maxi %>%
filter(station == "05211000") %>%
dplyr::select(DecYear, maxQ) %>%
head() %>%
kable()
source("F:/Extre/Codes/Functions.R")
## extraction of events
data <- data %>% select(Date, Q)
data$station <- rep(new$site_no,each = 3680)
data <- data %>% spread(station, Q)
StsChos <- c(1:27)
NoSt <- length(StsChos)
Years <- unique(as.numeric(substr(data$Date,1,4)))
StNames <- as.character(StsChos)
YearsWithEvent <- numeric()
AllEvMat <- matrix(0,length(StNames),1)
AllRes <- list()
for (i in 1:length(Years)){
# events in the i^th year at each station
Res <- ObtainMultVarEvents(TSs=data,U=0.1,Lag=4,Year=Years[i],StNames=StNames,Plotting=0,mfrow=c(NoSt,1))  ## For Censored Likelihood
Events <- Res$AllEvMat
Locations <- Res$Location
if (length(Events)>0) {
YearsWithEvent <- c(YearsWithEvent,rep(Years[i],dim(Events)[2]))
AllEvMat <- cbind(AllEvMat,Events)
}
AllRes[[i]] <- Res
}
DataEvents <- t(AllEvMat[,-1])
rownames(DataEvents) <- YearsWithEvent
head(DataEvents[,1:3],20) %>% kable()%>%
kable_styling(full_width = F)
DataEvents <- DataEvents[,-c(14:16)]
CW <- read.csv("weight.csv")
CatchtrWt <- CW %>% select(wx,wy)
p <- cbind(CatchtrWt$wy, CatchtrWt$wx)
library(SpatialExtremes)
library(geosphere)
RiverDisWt <- distm(p, p, fun = distHaversine)
RiverDisWt <- RiverDisWt/1000
FlowCon <- read.csv("F:/StreamFlow/joint_fitting/FlowCon.csv",header = FALSE)
FlowCon <- FlowCon[-c(14:16),-c(14:16)]
con <- FlowCon[lower.tri(FlowCon)]
FlowCon <- t(FlowCon)
FlowCon[lower.tri(FlowCon)] <- con
Theta.cen <- matrix(1,ncol = 24,nrow = 24)
for(i in 1:(24-1))
for(j in (i+1):24) {
Data.biv <- DataEvents[,c(i,j)]
Theta.cen[i,j] <- CensoredEstimationHR(Data.biv, thresholds = .90)
Theta.cen[j,i] <- Theta.cen[i,j]
}
Theta <- Theta.cen
Theta <- Theta[lower.tri(Theta)]
dist <- RiverDisWt[lower.tri(RiverDisWt)]
Theta <- data.frame(Theta, dist)
Theta$group <- con
Theta <- Theta %>% mutate(
group = ifelse(group==1, "connected", "unconnected")
)
ggplot(data = Theta[-c(103,121),]) +
geom_point(aes(x = dist, y=Theta, color = as.factor(group)),size = 2) +
#  coord_fixed(ratio = 10) +
ylim(c(1,2))
locations <- new %>% select(dec_long_va, dec_lat_va)
locations <- as.matrix(locations[-c(14:16),])
colnames(locations) <- c("lon", "lat")
library(SpatialExtremes)
##Compute the madogram
theta2 <- madogram(DataEvents, locations)
Theta2 <- Theta.cen
Theta2 <- Theta2[lower.tri(Theta2)]
dist <- theta2$dist
View(theta2)
Theta2 <- Theta.cen
Theta2 <- Theta2[lower.tri(Theta2)]
dist <- theta2$dist
theta2$dist
theta2[1,]
theta2[,1]
Theta2 <- Theta.cen
Theta2 <- Theta2[lower.tri(Theta2)]
dist <- theta2[,1]
Theta2 <- data.frame(Theta2, dist)
Theta2$group <- con
Theta2 <- Theta2 %>% mutate(
group = ifelse(group==1, "connected", "unconnected")
)
ggplot(data = Theta2[-c(103,121),]) +
geom_point(aes(x = dist, y=Theta2, color = as.factor(group)),size = 2) +
#  coord_fixed(ratio = 10) +
ylim(c(1,2))
m <- matrix(NA, ncol = 24, nrow = 24)
m[lower.tri(m)] <- 1:276
theta <- madogram(DataEvents, as.matrix(RiverDisWt))
View(theta)
m <- matrix(NA, ncol = 24, nrow = 24)
m[lower.tri(m)] <- 1:276
theta <- madogram(DataEvents, as.matrix(RiverDisWt))
theta <- as.data.frame(theta)
theta$group <- con
theta <- theta %>% mutate(
group = ifelse(group==1, "connected", "unconnected")
)
ggplot(data = theta[-c(103,121),]) +
geom_point(aes(x = dist, y=ext.coeff, color = as.factor(group)),size = 2) +
#  coord_fixed(ratio = 10) +
ylim(c(1,2))
theta2 <- as.data.frame(theta2)
theta2$group <- con
theta2 <- theta2 %>% mutate(
group = ifelse(group==1, "connected", "unconnected")
)
ggplot(data = theta2[-c(103,121),]) +
geom_point(aes(x = dist, y=ext.coeff, color = as.factor(group)),size = 2) +
#  coord_fixed(ratio = 10) +
ylim(c(1,2))
CW <- read.csv("weight.csv")
CatchtrWt <- CW %>% select(wx,wy)
p <- cbind(CatchtrWt$wy, CatchtrWt$wx)
library(SpatialExtremes)
library(geosphere)
RiverDisWt <- distm(p, p, fun = distHaversine)
RiverDisWt <- RiverDisWt/1000
FlowCon <- read.csv("F:/StreamFlow/joint_fitting/FlowCon.csv",header = FALSE)
FlowCon <- FlowCon[-c(14:16),-c(14:16)]
con <- FlowCon[lower.tri(FlowCon)]
FlowCon <- t(FlowCon)
FlowCon[lower.tri(FlowCon)] <- con
Theta.cen <- matrix(1,ncol = 24,nrow = 24)
for(i in 1:(24-1))
for(j in (i+1):24) {
Data.biv <- DataEvents[,c(i,j)]
Theta.cen[i,j] <- CensoredEstimationHR(Data.biv, thresholds = .90)
Theta.cen[j,i] <- Theta.cen[i,j]
}
Theta <- Theta.cen
Theta <- Theta[lower.tri(Theta)]
dist <- RiverDisWt[lower.tri(RiverDisWt)]
Theta <- data.frame(Theta, dist)
Theta$group <- con
Theta <- Theta %>% mutate(
group = ifelse(group==1, "connected", "unconnected")
)
ggplot(data = Theta[-c(103,121),]) +
geom_point(aes(x = dist, y=Theta, color = as.factor(group)),size = 2) +
#  coord_fixed(ratio = 10) +
ylim(c(1,2))
locations <- new %>% select(dec_long_va, dec_lat_va)
locations <- as.matrix(locations[-c(14:16),])
colnames(locations) <- c("lon", "lat")
library(SpatialExtremes)
##Compute the madogram
theta2 <- madogram(DataEvents, locations)
theta <- madogram(DataEvents, as.matrix(RiverDisWt))
Theta2 <- Theta.cen
Theta2 <- Theta2[lower.tri(Theta2)]
dist <- theta[,1]
Theta2 <- data.frame(Theta2, dist)
Theta2$group <- con
Theta2 <- Theta2 %>% mutate(
group = ifelse(group==1, "connected", "unconnected")
)
ggplot(data = Theta2[-c(103,121),]) +
geom_point(aes(x = dist, y=Theta2, color = as.factor(group)),size = 2) +
#  coord_fixed(ratio = 10) +
ylim(c(1,2))
View(theta)
Theta2 <- Theta.cen
Theta2 <- Theta2[lower.tri(Theta2)]
dist <- theta2[,1]
Theta2 <- data.frame(Theta2, dist)
Theta2$group <- con
Theta2 <- Theta2 %>% mutate(
group = ifelse(group==1, "connected", "unconnected")
)
ggplot(data = Theta2[-c(103,121),]) +
geom_point(aes(x = dist, y=Theta2, color = as.factor(group)),size = 2) +
#  coord_fixed(ratio = 10) +
ylim(c(1,2))
Theta2 <- Theta.cen
Theta2 <- Theta2[lower.tri(Theta2)]
dist <- theta2[,1]*100
Theta2 <- data.frame(Theta2, dist)
Theta2$group <- con
Theta2 <- Theta2 %>% mutate(
group = ifelse(group==1, "connected", "unconnected")
)
ggplot(data = Theta2[-c(103,121),]) +
geom_point(aes(x = dist, y=Theta2, color = as.factor(group)),size = 2) +
#  coord_fixed(ratio = 10) +
ylim(c(1,2))
theta2 <- as.data.frame(theta2)
theta2$group <- con
theta2 <- theta2 %>% mutate(
group = ifelse(group==1, "connected", "unconnected")
)
ggplot(data = theta2[-c(103,121),]) +
geom_point(aes(x = dist*100, y=ext.coeff, color = as.factor(group)),size = 2) +
#  coord_fixed(ratio = 10) +
ylim(c(1,2))
theta <- as.data.frame(theta)
theta$group <- con
theta <- theta %>% mutate(
group = ifelse(group==1, "connected", "unconnected")
)
ggplot(data = theta[-c(103,121),]) +
geom_point(aes(x = dist, y=ext.coeff, color = as.factor(group)),size = 2) +
#  coord_fixed(ratio = 10) +
ylim(c(1,2))
View(theta)
theta2 <- as.data.frame(theta2)
theta2$dist <- theta[,1]
theta2$group <- con
theta2 <- theta2 %>% mutate(
group = ifelse(group==1, "connected", "unconnected")
)
ggplot(data = theta2[-c(103,121),]) +
geom_point(aes(x = dist*100, y=ext.coeff, color = as.factor(group)),size = 2) +
#  coord_fixed(ratio = 10) +
ylim(c(1,2))
theta2 <- as.data.frame(theta2)
theta2$dist <- theta[,1]
theta2$group <- con
theta2 <- theta2 %>% mutate(
group = ifelse(group==1, "connected", "unconnected")
)
ggplot(data = theta2[-c(103,121),]) +
geom_point(aes(x = dist, y=ext.coeff, color = as.factor(group)),size = 2) +
#  coord_fixed(ratio = 10) +
ylim(c(1,2))
theta2 <- as.data.frame(theta2)
theta2$group <- con
theta2 <- theta2 %>% mutate(
group = ifelse(group==1, "connected", "unconnected")
)
ggplot(data = theta2[-c(103,121),]) +
geom_point(aes(x = dist, y=ext.coeff, color = as.factor(group)),size = 2) +
#  coord_fixed(ratio = 10) +
ylim(c(1,2))
Theta.cen <- matrix(1,ncol = 24,nrow = 24)
for(i in 1:(24-1))
for(j in (i+1):24) {
Data.biv <- DataEvents[,c(i,j)]
Theta.cen[i,j] <- CensoredEstimationHR(Data.biv, thresholds = .90)
Theta.cen[j,i] <- Theta.cen[i,j]
}
Theta <- Theta.cen
Theta <- Theta[lower.tri(Theta)]
dist <- theta[,1]
Theta <- data.frame(Theta, dist)
Theta$group <- con
Theta <- Theta %>% mutate(
group = ifelse(group==1, "connected", "unconnected")
)
ggplot(data = Theta[-c(103,121),]) +
geom_point(aes(x = dist, y=Theta, color = as.factor(group)),size = 2) +
#  coord_fixed(ratio = 10) +
ylim(c(1,2))
theta2 <- as.data.frame(theta2)
theta2$group <- con
theta2 <- theta2 %>% mutate(
group = ifelse(group==1, "connected", "unconnected")
)
ggplot(data = theta2[-c(103,121),]) +
geom_point(aes(x = dist*100, y=ext.coeff, color = as.factor(group)),size = 2) +
#  coord_fixed(ratio = 10) +
ylim(c(1,2))
theta2 <- as.data.frame(theta2)
theta2$group <- con
theta2 <- theta2 %>% mutate(
group = ifelse(group==1, "connected", "unconnected")
)
ggplot(data = theta2[-c(103,121),]) +
geom_point(aes(x = dist, y=ext.coeff, color = as.factor(group)),size = 2) +
#  coord_fixed(ratio = 10) +
ylim(c(1,2))
theta <- as.data.frame(theta)
theta$group <- con
theta <- theta %>% mutate(
group = ifelse(group==1, "connected", "unconnected")
)
ggplot(data = theta[-c(103,121),]) +
geom_point(aes(x = dist, y=ext.coeff, color = as.factor(group)),size = 2) +
#  coord_fixed(ratio = 10) +
ylim(c(1,2))
