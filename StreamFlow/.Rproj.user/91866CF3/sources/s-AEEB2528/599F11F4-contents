---
title: "Map"
author: "Mengran Li"
date: "2021/3/1"
output: html_document

---

###  <font size="5"> Are there fewer rivers/stream in the plateau area? & Common geographical features?</font>

```{r, echo = FALSE, message = FALSE}
library(tidyverse)
library(leaflet)
library(rgeos)
library(data.table)
setwd("F:\\StreamFlow")
load("Stream.Rdata")
```
<font size="4">
There are 4 layers:

-  River

The basemap, hydrographic map [Hydro-NHD - A base map that highlights hydrographic and NHD features](https://waterdata.usgs.gov/blog/basemaps/). It is from USGS.

-  Topography

The basemap, Esri.WorldImagery, is provided by Esri.

-  Region

Hydrologic Boundary shape file is from [Watershed Boundary Dataset](https://www.usgs.gov/core-science-systems/ngp/national-hydrography/watershed-boundary-dataset?qt-science_support_page_related_con=4#qt-science_support_page_related_con). It provides the boundary of each region. I have to say it was too hard to find so that I almost gave up (crying meme). But it may useful afterward. There are every class shape files, region (2-digital), subregion (4-digital), etc., until 12-digital. If necessary, I can plot them.

Label is the huc ID of each region.

The fill color is mean Streamflow of each region.

-  Site

Observation site. I'm sorry that color of dots can not represent statistics of this site, because I have pass mean to Color Palette. I haven't found method to solve the problem up to now. But I think it doesn't matter because I will display these statistics in another plot, though that's not perfect.

</font>

```{r, echo = FALSE}
Stream <- Stream[Q >= 0]
Stream_plot <- Stream[, c("Site", "Q", "DecYear", "Month", "Region")]
setkey(Stream_plot, Region)
Stream_mean <- Stream_plot[, mean(Q), by = Region]
names(Stream_mean) <- c("huc2", "mean")
rm(Stream, Stream_plot)
```


```{r, echo = FALSE, message = FALSE, results = FALSE}
bound <- sf::st_read(dsn = "F:/StreamFlow/wbdhu2_a_us_september2020.gdb")
bound <- subset(bound, !huc2 %in% c("19","20","21","22"))
bound <- full_join(bound, Stream_mean, by = c("huc2" = "huc2"))

```

```{r, echo = FALSE}
GetURL <- function(service, host = "basemap.nationalmap.gov") {
  sprintf("https://%s/arcgis/services/%s/MapServer/WmsServer", host, service)
}
pal <- colorNumeric(
  palette = colorRampPalette(c("skyblue", "darkblue"))(length(bound$mean)),
  domain = bound$mean
)

leaflet(bound) %>%
  setView(lng = -95, lat = 40, zoom = 4)%>%
  addPolygons(color = ~ pal(mean), weight = 1, smoothFactor = 0.5,
              opacity = 1.0, fillOpacity = 0.5,label = ~htmltools::htmlEscape(paste(huc2, name)),
              highlightOptions = highlightOptions(color = "white", weight = 2,
                                                  bringToFront = TRUE),
              group = "Region")%>%
  addCircleMarkers(data = Siteinfo,
    lng = ~dec_lon_va,
    lat = ~dec_lat_va,
    radius = ~3,
    stroke = FALSE,
    fill = TRUE,
    color = "red",
    fillOpacity = 0.4,
    group = "Site"
  )%>%
  addLegend("bottomright",
            pal = pal,
            values = ~mean,
            title = "Mean",
            labFormat = labelFormat(),
            opacity = 1,
            group="Region"
  ) %>%
  addWMSTiles(GetURL("USGSHydroCached"),layers = "0", group = "River")%>%
  addProviderTiles("Esri.WorldImagery",group = "Topography")%>%
  addLayersControl(
          overlayGroups =c("River", "Topography", "Region","Site"),
          options = layersControlOptions(collapsed=FALSE)
          )
  
```












